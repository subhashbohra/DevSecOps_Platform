name: AI DevSecOps MVP

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  devsecops-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js (can extend later for Python/Java)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install deps
      - name: Install dependencies
        run: npm install --ignore-scripts

      # Run audit
      - name: Run dependency audit
        run: npm audit --json > audit.json || true

      # Generate markdown report
      - name: Generate vulnerability report
        run: |
          echo "## 🔍 Dependency Vulnerability Report" > report.md
          echo "" >> report.md
          if jq -e '.advisories | length > 0' audit.json > /dev/null; then
            jq -r '
              .advisories[] |
              "| \(.module_name) | \(.id) | \(.severity) | \(.title) | \(.recommendation) |"
            ' audit.json >> report.md
          else
            echo "No vulnerabilities found." >> report.md
          fi

      # Read report into output
      - name: Read vulnerability report
        id: vuln_report
        run: |
          content=$(cat report.md)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "report=$content" >> $GITHUB_OUTPUT

      # AI explanation step
      - name: Generate AI explanation
        id: ai_explain
        run: |
          content=$(cat report.md || echo "No vulnerabilities found.")
          prompt="Explain these dependency scan results in plain English:\n\n$content"
          response=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [{\"role\": \"user\", \"content\": \"$prompt\"}]
            }" | jq -r '.choices[0].message.content')
          echo "ai_response=$response" >> $GITHUB_OUTPUT

      # Comment in PR
      - name: Post PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: devsecops-scan
          message: |
            ## 🛡️ AI DevSecOps Scan Summary
            ✅ Dependency scan completed.

            ### 📊 Vulnerability Report
            ${{ steps.vuln_report.outputs.report }}

            ### 🤖 AI Explanation
            ${{ steps.ai_explain.outputs.ai_response }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🚫 Commenting out auto-fix step for now
      # - name: Auto-fix dependencies
      #   run: |
      #     npm audit fix || true
      #     if [[ `git status --porcelain` ]]; then
      #       git config user.name "github-actions[bot]"
      #       git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #       git checkout -b fix/dependency-updates || git checkout fix/dependency-updates
      #       git add .
      #       git commit -m "chore: auto-fix dependencies"
      #       git push origin HEAD
      #     fi
