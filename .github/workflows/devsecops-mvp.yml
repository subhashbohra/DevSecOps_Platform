name: AI DevSecOps MVP

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  devsecops-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js for dependency scanning (can extend for Python, Java, etc.)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install deps (safe mode, no audit fix)
      - name: Install dependencies
        run: npm install --ignore-scripts

      # Run npm audit (SCA scan)
      - name: Run dependency audit
        run: npm audit --json > audit.json || true

      # Parse audit report into Markdown table
      - name: Generate vulnerability report
        run: |
          echo "## 🔍 Dependency Vulnerability Report" > report.md
          echo "" >> report.md
          jq -r '
            .advisories[] |
            "| \(.module_name) | \(.id) | \(.severity) | \(.title) | \(.recommendation) |"
          ' audit.json >> report.md || echo "No vulnerabilities found." >> report.md

      # AI Explanation step (requires OPENAI_API_KEY in repo/org secrets)
      - name: Generate AI explanation
        id: ai_explain
        run: |
          content=$(cat report.md)
          prompt="Explain these vulnerabilities in simple terms, their risk, and how to fix: $content"
          response=$(curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [{\"role\": \"user\", \"content\": \"$prompt\"}]
            }" | jq -r '.choices[0].message.content')
          echo "ai_response=$response" >> $GITHUB_OUTPUT

      # Create PR comment with dashboard
      - name: Post PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: devsecops-scan
          message: |
            ## 🛡️ AI DevSecOps Scan Summary
            ✅ Dependency scan completed.

            ### 📊 Vulnerability Report
            $(cat report.md)

            ### 🤖 AI Explanation
            ${{ steps.ai_explain.outputs.ai_response }}

      # Auto-fix dependencies (optional safe updates)
      - name: Auto-fix dependencies
        run: |
          npm audit fix || true
          if [[ `git status --porcelain` ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git checkout -b fix/dependency-updates || git checkout fix/dependency-updates
            git add .
            git commit -m "chore: auto-fix dependencies"
            git push origin HEAD
          fi
